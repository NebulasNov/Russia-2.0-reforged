on_actions = {

	#A Country Dies During the SCW
	on_capitulation = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
					FROM = {
						OR = {
							tag = SOV
							tag = SOU
							tag = UKR
						}
					}
				}
				#UKR Dies
				if = {
					limit = {
						sou_in_scw = yes
						sov_in_scw = yes
						ROOT = {
							tag = UKR
						}
					}
					for_each_loop = {
						array = ukr.owned_states
						value = v
						index = i
						break = break_array

						add_to_temp_array = { ukr.owned_states_scw = var:v }
					}
					for_each_loop = {
						array = ukr.owned_states_scw
						value = v
						index = i
						break = break_array

						if = {
							limit = {
								any_state = {
									OR = {
										is_controlled_by = SOU
										is_controlled_by = SOV
									}
									state = var:v
								}
							}
							every_state = {
								limit = {
									is_controlled_by = SOU
									state = var:v
								}
								SOU = {
									transfer_state = PREV
								}
							}
							every_state = {
								limit = {
									is_controlled_by = SOV
									state = var:v
								}
								SOV = {
									transfer_state = PREV
								}
							}
						}
						else_if = {
							limit = {
								any_state = {
									NOT = {
										is_controlled_by = SOU
										is_controlled_by = SOV
									}
									state = var:v
								}
							}
							every_state = {
								limit = {
									any_country = {
										NOT = {
											TAG = SOV
											TAG = SOU
										}
										controls_state = PREV
										NOT = { TAG = ROOT }
									}
									is_core_of = ROOT
								}
								SOU = {
									set_state_controller = var:v
								}
							}
							SOU = {
								transfer_state = var:v
							}
						}
						if = {
							limit = {
								NOT = {
									SOV = {
										controls_state = var:v
									}
								}
								var:v = {
									is_owned_by = SOV
								}
							}
							SOV = {
								set_state_controller = var:v
							} 
						}
						if = {
							limit = {
								NOT = {
									SOU = {
										controls_state = var:v
									}
								}
								var:v = {
									is_owned_by = SOU
								}
							}
							SOU = {
								set_state_controller = var:v
							} 
						}
					}
				}
				#SOU Dies
				else_if = {
					limit = {
						ROOT = {
							ukr_in_scw = yes
							sov_in_scw = yes
							tag = SOU
						}
					}
					log = "[SOU.GetNameDefCap] Capitulated (vs SOV & UKR)"
					for_each_loop = {
						array = sou.owned_states
						value = v
						index = i
						break = break_array

						add_to_temp_array = { sou.owned_states_scw = var:v }
					}
					for_each_loop = {
						array = sou.owned_states_scw
						value = v
						index = i
						break = break_array

						if = {
							limit = {
								is_in_array = { ukr.scw_claimed_states = var:v }
							}
							if = {
								limit = {
									has_government = anarchy
								}
								UKR = {
									transfer_state = var:v
								}
							}
							else = {
								if = {
									limit = {
										is_in_array = { global.kievan_rus_state_ukraine = var:v }
									}
									UKR = {
										transfer_state = var:v
									}
								}
								else = {
									if = {
										limit = {
											SOU = {
												is_subject = no
											}
										}
										UKR = {
											set_autonomy = {
												target = SOU
												autonomy_state = autonomy_puppet
											}
										}
										SOU = {
											create_country_leader = {
												name = "Ivan Kononov"
												desc = "POLITICS_IVAN_KONONOV_DESC"
												picture = "Portrait_Ivan_Kononov.dds"
												expire = "1965.1.1"
												ideology = oligarchism
												traits = {
													
												}
											}
											set_cosmetic_tag = AFS
										}
									}
									if = {
										limit = {
											NOT = {
												SOU = {
													controls_state = var:v
												}
											}
										}
										SOU = {
											set_state_controller = var:v
										} 
									}
								}
							}
						}
						else = {
							SOV = {
								log = "Transfering state var:v ([?var:v]) [?var:v.GetName] to SOV"
								transfer_state = var:v
							}
						}
					}
					if = {
						limit = {
							OR = {
								UKR = {
									check_variable = {
										var = ukr.scw_claimed_states^num
										value = 5
										compare = greater_than_or_equals
									}
									#has_country_flag = ukr_blr_coup_succeeds
								}
								SOU = {
									is_subject_of = UKR
								}
								BLR = {
									is_subject_of = UKR
								}
								FIN = {
									is_in_faction_with = UKR
									has_country_flag = fin_accepted_scw_ukr_alliance
									is_in_array = { global.russian_scw_participants = FIN }
								}
							}
						}
						SOV = {
							country_event = { id = generics.44 days = 15 }
							country_event = { id = soviets.604 hours = 2 }
						}
						UKR = {
							country_event = { id = ukrains.53 hours = 2 }
						}
					}
					if = {
						limit = {
							FIN = {
								is_in_faction_with = UKR
								has_country_flag = fin_accepted_scw_ukr_alliance
								is_in_array = { global.russian_scw_participants = FIN }
							}
						}
						FIN = {
							transfer_state = 195
							transfer_state = 213
							transfer_state = 215
							transfer_state = 216
							country_event = { id = finlands.1 days = 2 }
						}
					}
				}
				#SOV Dies
				else_if = {
					limit = {
						ROOT = {
							ukr_in_scw = yes
							sou_in_scw = yes
							tag = SOV
						}
					}
					log = "[SOV.GetNameDefCap] Capitulated (vs SOU & UKR)"
					for_each_loop = {
						array = sov.owned_states
						value = v
						index = i
						break = break_array

						add_to_temp_array = { sov.owned_states_scw = var:v }
					}
					for_each_loop = {
						array = sov.owned_states_scw
						value = v
						index = i
						break = break_array

						if = {
							limit = {
								is_in_array = { ukr.scw_claimed_states = var:v }
							}
							if = {
								limit = {
									has_government = anarchy
								}
								UKR = {
									transfer_state = var:v
								}
							}
							else = {
								if = {
									limit = {
										is_in_array = { global.kievan_rus_state_ukraine = var:v }
									}
									UKR = {
										transfer_state = var:v
									}
								}
								else = {
									if = {
										limit = {
											SOV = {
												is_subject = no
											}
										}
										UKR = {
											set_autonomy = {
												target = SOV
												autonomy_state = autonomy_puppet
											}
										}
										SOV = {
											create_country_leader = {
												name = "Ivan Kononov"
												desc = "POLITICS_IVAN_KONONOV_DESC"
												picture = "Portrait_Ivan_Kononov.dds"
												expire = "1965.1.1"
												ideology = oligarchism
												traits = {
													
												}
											}
											set_cosmetic_tag = AFS
										}
									}
								}
							}
							if = {
								limit = {
									NOT = {
										SOV = {
											controls_state = var:v
										}
									}
								}
								SOV = {
									set_state_controller = var:v
								} 
							}
						}
						else = {
							SOU = {
								log = "Transfering state var:v ([?var:v]) [?var:v.GetName] to SOV"
								transfer_state = var:v
							}
						}
					}
				}
			}
		}
	}

	#Someone Wins SCW
	on_capitulation = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
					FROM = {
						OR = {
							tag = SOV
							tag = SOU
							tag = UKR
						}
					}
				}
				#UKR Wins SCW
				if = {
					limit = {
						ukr_in_scw = yes
						OR = {
							AND = {
								ROOT = {
									TAG = SOU
								}
								NOT = {
									sov_in_scw = yes
								}
							}
							AND = {
								ROOT = {
									TAG = SOV
								}
								NOT = {
									sou_in_scw = yes
								}
							}
						}
						FROM = {
							tag = UKR
						}
					}
					ROOT = {
						transfer_navy = {
							target = FROM
						}
					}
					if = {
						limit = {
							ROOT = {
								TAG = SOU
							}
						}
						for_each_loop = {
							array = sou.owned_states
							value = v
							index = i
							break = break_array
	
							add_to_temp_array = { sou.owned_states_scw = var:v }
						}
						for_each_loop = {
							array = sou.owned_states_scw
							value = v
							index = i
							break = break_array

							if = {
								limit = {
									has_government = anarchy
								}
								UKR = {
									transfer_state = var:v
								}
							}
							if = {
								limit = {
									is_in_array = { ukr.scw_claimed_states = var:v }
								}
								else = {
									if = {
										limit = {
											is_in_array = { global.kievan_rus_state_ukraine = var:v }
										}
										UKR = {
											transfer_state = var:v
										}
									}
									if = {
										limit = {
											SOU = {
												is_subject = no
											}
											SOV = {
												is_subject = no
											}
										}
										UKR = {
											set_autonomy = {
												target = SOU
												autonomy_state = autonomy_puppet
											}
										}
										SOU = {
											create_country_leader = {
												name = "Ivan Kononov"
												desc = "POLITICS_IVAN_KONONOV_DESC"
												picture = "Portrait_Ivan_Kononov.dds"
												expire = "1965.1.1"
												ideology = oligarchism
												traits = {
													
												}
											}
											set_cosmetic_tag = AFS
										}
									}
								}
							}
							else_if = {
								limit = {
									NOT = {
										SOV = {
											is_subject_of = UKR
										}
									}
								}
								SOU = {
									transfer_state = var:v
								}
							}
							if = {
								limit = {
									SOU = {
										is_subject_of = UKR
									}
									NOT = {
										SOU = {
											controls_state = var:v
										}
										var:v = {
											is_owned_by = UKR
										}
									}
								}
								SOU = {
									set_state_controller = var:v
								} 
							}
							else_if = {
								limit = {
									SOV = {
										is_subject_of = UKR
									}
								}
								SOV = {
									log = "Transfering state var:v ([?var:v]) [?var:v.GetName] to SOV"
									transfer_state = var:v
								}
							}
							if = {
								limit = {
									SOV = {
										is_subject_of = UKR
									}
									NOT = {
										SOV = {
											controls_state = var:v
										}
										var:v = {
											is_owned_by = UKR
										}
									}
								}
								SOV = {
									set_state_controller = var:v
								} 
							}
						}
					}
					if = {
						limit = {
							ROOT = {
								TAG = SOV
							}
						}
						for_each_loop = {
							array = sov.owned_states
							value = v
							index = i
							break = break_array
	
							add_to_temp_array = { sov.owned_states_scw = var:v }
						}
						for_each_loop = {
							array = sov.owned_states_scw
							value = v
							index = i
							break = break_array
	
							if = {
								limit = {
									NOT = {
										is_in_array = { ukr.scw_claimed_states = var:v }
									}
								}
								if = {
									limit = {
										has_government = anarchy
									}
									UKR = {
										transfer_state = var:v
									}
								}
								else = {
									if = {
										limit = {
											is_in_array = { global.kievan_rus_state_ukraine = var:v }
										}
										UKR = {
											transfer_state = var:v
										}
									}
									else = {
										if = {
											limit = {
												SOU = {
													is_subject = no
												}
												SOV = {
													is_subject = no
												}
											}
											UKR = {
												set_autonomy = {
													target = SOV
													autonomy_state = autonomy_puppet
												}
											}
											SOV = {
												create_country_leader = {
													name = "Ivan Kononov"
													desc = "POLITICS_IVAN_KONONOV_DESC"
													picture = "Portrait_Ivan_Kononov.dds"
													expire = "1965.1.1"
													ideology = oligarchism
													traits = {
														
													}
												}
												set_cosmetic_tag = AFS
											}
										}
										if = {
											limit = {
												NOT = {
													SOV = {
														controls_state = var:v
													}
													var:v = {
														is_owned_by = UKR
													}
												}
											}
											SOV = {
												set_state_controller = var:v
											} 
										}
									}
									if = {
										limit = {
											SOU = {
												is_subject_of = UKR
											}
										}
										SOU = {
											log = "Transfering state var:v ([?var:v]) [?var:v.GetName] to SOV"
											transfer_state = var:v
										}
										if = {
											limit = {
												NOT = {
													SOU = {
														controls_state = var:v
													}
													var:v = {
														is_owned_by = UKR
													}
												}
											}
											SOU = {
												set_state_controller = var:v
											} 
										}
									}
								}
							}
						}
					}
					FROM = { #TODO Event For End of Civil War UKR
						country_event = { id = ukrains.47  hours = 6 }
						#news_event = { id =  days = 1 }
					}
				}
				#SOU Wins SCW
				else_if = {
					limit = {
						sou_in_scw = yes
						OR = {
							AND = {
								ROOT = {
									TAG = SOV
								}
								NOT = {
									ukr_in_scw = yes
								}
							}
							AND = {
								ROOT = {
									TAG = UKR
								}
								NOT = {
									sov_in_scw = yes
								}
							}
						}
						FROM = {
							tag = SOU
						}
					}
					ROOT = {
						transfer_navy = {
							target = FROM
						}
					}
					if = {
						limit = {
							OR = {
								TAG = GEO
								TAG = BLR
								TAG = AZR
								TAG = ARM
								TAG = KAZ
								TAG = TMS
							}
						}
						SOU = {
							add_state_core = PREV
						}
					}
					every_state = {
						limit = {
							any_country = {
								OR = {
									is_in_faction_with = ROOT
									is_subject_of = ROOT
								}
								owns_state = PREV
								NOT = { TAG = ROOT }
							}
							is_core_of = FROM
						}
						FROM = {
							transfer_state = PREV
						}
					}
					every_state = {
						limit = {
							is_owned_by = ROOT
						}
						FROM = {
							transfer_state = PREV
						}
					}
					FROM = {
						country_event = { id = soviets.238 hours = 3 }
						news_event = { id = newsrussia2.68 days = 1 }
					}
				}
				#SOV Wins SCW
				else_if = {
					limit = {
						sov_in_scw = yes
						OR = {
							AND = {
								ROOT = {
									TAG = SOU
								}
								NOT = {
									UKR = {
										check_variable = {
											var = ukr.scw_claimed_states^num
											value = 5
											compare = greater_than_or_equals
										}
										#has_country_flag = ukr_blr_coup_succeeds
									}
									BLR = {
										is_subject_of = UKR
									}
									SOU = {
										is_subject_of = UKR
									}
									FIN = {
										is_in_faction_with = UKR
										has_country_flag = fin_accepted_scw_ukr_alliance
									}
								}
							}
							AND = {
								ROOT = {
									TAG = UKR
								}
								NOT = {
									sou_in_scw = yes
								}
							}
						}
						FROM = {
							tag = SOV
						}
					}
					every_state = {
						limit = {
							any_country = {
								OR = {
									is_in_faction_with = ROOT
									is_subject_of = ROOT
								}
								owns_state = PREV
								NOT = { TAG = ROOT }
							}
							is_core_of = FROM
						}
						FROM = {
							transfer_state = PREV
						}
					}
					ROOT = {
						transfer_navy = {
							target = FROM
						}
					}	
					every_state = {
						limit = {
							is_owned_by = ROOT
						}
						FROM = {
							transfer_state = PREV
						}
					}
					if = {
						limit = {
							UKR = {
								OR = {
									is_in_faction_with = ROOT
									has_war_with = FROM
								}
							}
						}
						every_state = {
							limit = {
								is_owned_by = UKR
							}
							FROM = {
								transfer_state = PREV
								add_state_core = PREV
							}
						}
					}
					FROM = {
						country_event = { id = soviets.190 hours = 6 }
						news_event = { id = newsrussia2.67 days = 1 }
					}
					if = {
						limit = {
							FROM = {
								OR = {
									has_country_flag = japan_accept_to_help_give_russian_far_east
									has_country_flag = has_negotiated_with_germany_ressource_rights
									has_country_flag = accept_american_occupation_siberia_after_cw 
									has_country_flag = accept_french_factories_after_cw 
									has_country_flag = accept_diplomatic_relation_with_italy 
									has_country_flag = accept_english_help_for_shipment 
								}
							}
						}
						FROM = {
							country_event = { id = generics.34 days = 7 }
						}
					}
					every_country = {
						limit = {
							has_country_flag = has_helped_whiteguard_by_volunteers
						}
						country_event = { id = generics.35 days = 1 }
					}
				}
			}
		}	
	}
	
	#Set a country flag for major that send volunteers to WG durinf CW
	on_send_volunteers = {
		effect = {
			if = {
				limit = {
					ROOT = {
						has_country_flag = help_whiteguard_during_russian_civil_war
						has_idea = SOV_Participation_russian_civil_war_foreign
					}
					FROM = {
						tag = SOV
						has_global_flag = second_russian_civil_war_in_progress
					}
				}
				ROOT = {
					set_country_flag = has_helped_whiteguard_by_volunteers
				}	
			}
		}
	}

	#Crimea loses all their ships on capitulation
	on_capitulation = {
		effect = {
			if = {
				limit = {
					ROOT = {
						tag = CRI
						has_idea = CRI_Master_black_sea
					}
				}
				ROOT = {
					transfer_navy = {
						target = FROM
					}
				}
				FROM = {
					country_event = generics.43
				}
			}
		}
	}

	#Arrays setup
	on_war_relation_added = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				log = "Russia Reworked SCW on_war_relation_added debug :"
				log = " ROOT : [ROOT.GetNameDefCap]"
				log = " FROM : [FROM.GetNameDefCap]"
				if = {
					limit = {
						ROOT = {
							OR = {
								tag = SOV
								tag = SOU
								tag = UKR
							}
							if = {
								limit = {
									tag = UKR
								}
								is_in_array = { global.russian_scw_participants = UKR }
							}
						}
					}
					log = " ROOT ([ROOT.GetNameDefCap]) is valid"
					if = {
						limit = {
							NOT = {
								#is_in_array = { global.russian_scw_participants = ROOT }
								any_of = {
									array = global.russian_scw_participants
									value = v
									index = i
									
									ROOT = {
										tag = var:v
									}
								}
							}
						}
						add_to_array = { global.russian_scw_participants = ROOT }
						log = " Added to array ROOT global.russian_scw_participants : [ROOT.GetNameDefCap]"
						if = {
							limit = {
								ROOT = {
									OR = {
										tag = SOV
										is_in_faction_with = SOV
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sov = ROOT }
						}
						else_if = {
							limit = {
								ROOT = {
									OR = {
										tag = SOU
										is_in_faction_with = SOU
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sou = ROOT }
						}
						else_if = {
							limit = {
								ROOT = {
									OR = {
										tag = UKR
										is_in_faction_with = UKR
									}
								}
								is_in_array = { global.russian_scw_participants = UKR }
							}
							add_to_array = { global.russian_scw_participants_ukr = ROOT }
						}
						else = {
							add_to_array = { global.russian_scw_participants_other = ROOT }
						}
					}
					if = {
						limit = {
							NOT = {
								#is_in_array = { global.russian_scw_participants = FROM }
								any_of = {
									array = global.russian_scw_participants
									value = v
									index = i
									
									FROM = {
										tag = var:v
									}
								}
							}
						}
						add_to_array = { global.russian_scw_participants = FROM }
						log = " Added to array FROM global.russian_scw_participants : [FROM.GetNameDefCap]"
						if = {
							limit = {
								FROM = {
									OR = {
										tag = SOV
										is_in_faction_with = SOV
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sov = FROM }
						}
						else_if = {
							limit = {
								FROM = {
									OR = {
										tag = SOU
										is_in_faction_with = SOU
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sou = FROM }
						}
						else_if = {
							limit = {
								FROM = {
									OR = {
										tag = UKR
										is_in_faction_with = UKR
									}
								}
								is_in_array = { global.russian_scw_participants = UKR }
							}
							add_to_array = { global.russian_scw_participants_ukr = FROM }
						}
						else = {
							add_to_array = { global.russian_scw_participants_other = FROM }
						}
					}
				}
				if = {
					limit = {
						FROM = {
							OR = {
								tag = SOV
								tag = SOU
								tag = UKR
							}
							if = {
								limit = {
									tag = UKR
								}
								is_in_array = { global.russian_scw_participants = UKR }
							}
						}
					}
					log = " FROM ([FROM.GetNameDefCap]) is valid"
					if = {
						limit = {
							NOT = {
								#is_in_array = { global.russian_scw_participants = ROOT }
								any_of = {
									array = global.russian_scw_participants
									value = v
									index = i
									
									ROOT = {
										tag = var:v
									}
								}
							}
						}
						add_to_array = { global.russian_scw_participants = ROOT }
						log = " Added to array ROOT global.russian_scw_participants : [ROOT.GetNameDefCap]"
						if = {
							limit = {
								ROOT = {
									OR = {
										tag = SOV
										is_in_faction_with = SOV
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sov = ROOT }
						}
						else_if = {
							limit = {
								ROOT = {
									OR = {
										tag = SOU
										is_in_faction_with = SOU
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sou = ROOT }
						}
						else_if = {
							limit = {
								ROOT = {
									OR = {
										tag = UKR
										is_in_faction_with = UKR
									}
								}
								is_in_array = { global.russian_scw_participants = UKR }
							}
							add_to_array = { global.russian_scw_participants_ukr = ROOT }
						}
						else = {
							add_to_array = { global.russian_scw_participants_other = ROOT }
						}
					}
					if = {
						limit = {
							NOT = {
								#is_in_array = { global.russian_scw_participants = FROM }
								any_of = {
									array = global.russian_scw_participants
									value = v
									index = i
									
									FROM = {
										tag = var:v
									}
								}
							}
						}
						add_to_array = { global.russian_scw_participants = FROM }
						log = " Added to array FROM global.russian_scw_participants : [FROM.GetNameDefCap]"
						if = {
							limit = {
								FROM = {
									OR = {
										tag = SOV
										is_in_faction_with = SOV
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sov = FROM }
						}
						else_if = {
							limit = {
								FROM = {
									OR = {
										tag = SOU
										is_in_faction_with = SOU
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sou = FROM }
						}
						else_if = {
							limit = {
								FROM = {
									OR = {
										tag = UKR
										is_in_faction_with = UKR
									}
								}
								is_in_array = { global.russian_scw_participants = UKR }
							}
							add_to_array = { global.russian_scw_participants_ukr = FROM }
						}
						else = {
							add_to_array = { global.russian_scw_participants_other = FROM }
						}
					}
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	#All the following are for safety measures
	on_annex = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_subject_annexed = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_release_as_free = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_release_as_puppet = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_puppet = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_peace = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_create_faction = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_faction_formed = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_join_faction = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_leave_faction = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_weekly_SOV = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_weekly_SOU = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_weekly_UKR = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}
}