on_actions = {

	#A Country Dies During the SCW
	on_capitulation = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				#UKR Dies
				if = {
					limit = {
						ROOT = {
							tag = UKR
						}
					}
					log = "[UKR.GetNameDefCap] Capitulated"
					for_each_scope_loop = {
						array = ukr.owned_states

						if = {
							limit = {
								CONTROLLER = {
									tag = SOV
								}
							}
							SOV = {
								transfer_state = PREV
							}
						}
						else = {
							SOU = {
								transfer_state = PREV
							}
						}
					}
				}
				#SOU Dies
				else_if = {
					limit = {
						ROOT = {
							tag = SOU
						}
					}
					log = "[SOU.GetNameDefCap] Capitulated"
					if = {
						limit = {
							ukr_in_scw = yes
							sov_in_scw = yes
						}
						for_each_scope_loop = {
							array = sou.owned_states

							if = {
								limit = {
									is_in_array = { ukr.scw_claimed_states = PREV }
								}
								UKR = {
									if = {
										limit = {
											has_government = anarchy
										}
										transfer_state = PREV
									}
									else = {
										if = {
											limit = {
												is_in_array = { global.kievan_rus_state_ukraine = PREV }
											}
											transfer_state = PREV
										}
										else_if = {
											limit = {
												PREV = {
													is_core_of = SOU
												}
											}
											if = {
												limit = {
													SOU = {
														is_subject = no
													}
												}
												set_autonomy = {
													target = SOU
													autonomy_state = autonomy_puppet
												}
											}
											SOU = {
												transfer_state = PREV
											}
										}
									}
								}
							}
							else = {
								SOV = {
									transfer_state = PREV
								}
							}
						}
					}
					if = {
						limit = {
							UKR = {
								OR = {
									check_variable = {
										var = global.kievan_rus_state_ukraine^num
										value = 5
										compare = greater_than_or_equals
									}
									BLR = {
										is_subject_of = UKR
									}
									SOU = {
										is_subject_of = UKR
									}
								}
							}
						}
						SOV = {
							country_event = { id = generics.44 days = 15 }
						}
					}
				}
				else_if = {
					limit = {
						ROOT = {
							tag = SOV
						}
					}
					log = "[SOV.GetNameDefCap] Capitulated"
					if = {
						limit = {
							ukr_in_scw = yes
							sou_in_scw = yes
						}
						for_each_scope_loop = {
							array = sov.owned_states

							if = {
								limit = {
									is_in_array = { ukr.scw_claimed_states = PREV }
								}
								UKR = {
									if = {
										limit = {
											has_government = anarchy
										}
										transfer_state = PREV
									}
									else = {
										if = {
											limit = {
												is_in_array = { global.kievan_rus_state_ukraine = PREV }
											}
											transfer_state = PREV
										}
										else_if = {
											limit = {
												PREV = {
													is_core_of = SOU
												}
											}
											if = {
												limit = {
													SOU = {
														is_subject = no
													}
												}
												set_autonomy = {
													target = SOU
													autonomy_state = autonomy_puppet
												}
											}
											SOU = {
												transfer_state = PREV
											}
										}
									}
								}
							}
							else = {
								SOV = {
									transfer_state = PREV
								}
							}
						}
					}
				}
			}
		}
	}

	#Someon Wins SCW
	on_capitulation = {
		effect = {
			#UKR Wins SCW
			if = {
				limit = {
					ukr_in_scw = yes
					OR = {
						AND = {
							ROOT = {
								TAG = SOU
							}
							NOT = {
								sov_in_scw = yes
							}
						}
						AND = {
							ROOT = {
								TAG = SOV
							}
							NOT = {
								sou_in_scw = yes
							}
						}
					}
					FROM = {
						tag = UKR
					}
				}
				ROOT = {
					transfer_navy = {
						target = FROM
					}
				}	
				every_state = {
					limit = {
						is_owned_by = ROOT
					}
					FROM = {
						transfer_state = PREV
					}
				}
				if = {
					limit = {
						UKR = {
							NOT = {
								has_government = anarchy
							}
						}
					}		
					for_each_scope_loop = {
						array = sou.owned_states

						if = {
							limit = {
								is_in_array = { ukr.scw_claimed_states = PREV }
							}
							UKR = {
								if = {
									limit = {
										is_in_array = { global.kievan_rus_state_ukraine = PREV }
									}
									transfer_state = PREV
								}
								else_if = {
									limit = {
										SOU = {
											is_subject_of = UKR
										}
									}
									every_state = {
										limit = {
											is_core_of = SOU
											is_core_of = SOV
											is_owned_by = SOV
										}
										SOU = {
											transfer_state = PREV
										}
									}
								}
								else_if = {
									limit = {
										NOT = {
											SOU = {
												is_subject_of = UKR
											}
										}
									}
									UKR = {
										set_autonomy = {
											target = SOV
											autonomy_state = autonomy_puppet
										}
									}
								}
							}
						}
					}				
					for_each_scope_loop = {
						array = sov.owned_states

						if = {
							limit = {
								is_in_array = { ukr.scw_claimed_states = PREV }
							}
							UKR = {
								if = {
									limit = {
										is_in_array = { global.kievan_rus_state_ukraine = PREV }
									}
									transfer_state = PREV
								}
								else_if = {
									limit = {
										SOU = {
											is_subject_of = UKR
										}
									}
									every_state = {
										limit = {
											is_core_of = SOU
											is_core_of = SOV
											is_owned_by = SOV
										}
										SOU = {
											transfer_state = PREV
										}
									}
								}
								else_if = {
									limit = {
										NOT = {
											SOU = {
												is_subject_of = UKR
											}
										}
									}
									UKR = {
										set_autonomy = {
											target = SOV
											autonomy_state = autonomy_puppet
										}
									}
								}
							}
						}
					}
				}
				else_if = {
					limit = {
						UKR = {
							has_government = anarchy
						}
					}
					every_state = {
						limit = {
							is_owned_by = ROOT
						}
						FROM = {
							transfer_state = PREV
						}
					}
				}
				FROM = { #TODO Event For End of Civil War UKR
					country_event = { id = ukrains.47  hours = 6 }
					#news_event = { id =  days = 1 }
				}
			}
			#SOU Wins SCW
			else_if = {
				limit = {
					sou_in_scw = yes
					OR = {
						AND = {
							ROOT = {
								TAG = SOV
							}
							NOT = {
								ukr_in_scw = yes
							}
						}
						AND = {
							ROOT = {
								TAG = UKR
							}
							NOT = {
								sov_in_scw = yes
							}
						}
					}
					FROM = {
						tag = SOU
					}
				}
				ROOT = {
					transfer_navy = {
						target = FROM
					}
				}	
				every_state = {
					limit = {
						is_owned_by = ROOT
					}
					FROM = {
						transfer_state = PREV
					}
				}
				if = {
					limit = {
						OR = {
							TAG = GEO
							TAG = BLR
							TAG = AZR
							TAG = ARM
							TAG = KAZ
							TAG = TMS
						}
					}
					SOU = {
						add_state_core = PREV
					}
				}
				FROM = {
					country_event = { id = soviets.238 hours = 3 }
					news_event = { id = newsrussia2.68 days = 1 }
				}
			}
			#SOV Wins SCW
			else_if = {
				limit = {
					sov_in_scw = yes
					OR = {
						AND = {
							ROOT = {
								TAG = SOU
							}
							NOT = {
								ukr_in_scw = yes
							}
						}
						AND = {
							ROOT = {
								TAG = UKR
							}
							NOT = {
								sou_in_scw = yes
							}
						}
					}
					FROM = {
						tag = SOV
					}
				}
				ROOT = {
					transfer_navy = {
						target = FROM
					}
				}	
				every_state = {
					limit = {
						is_owned_by = ROOT
					}
					FROM = {
						transfer_state = PREV
					}
				}
				if = {
					limit = {
						UKR = {
							OR = {
								is_in_faction_with = ROOT
								has_war_with = FROM
							}
						}
					}
					every_state = {
						limit = {
							is_owned_by = UKR
						}
						FROM = {
							transfer_state = PREV
							add_state_core = PREV
						}
					}
				}
				FROM = {
					country_event = { id = soviets.190 hours = 6 }
					news_event = { id = newsrussia2.67 days = 1 }
				}
				if = {
					limit = {
						FROM = {
							OR = {
								has_country_flag = japan_accept_to_help_give_russian_far_east
								has_country_flag = has_negotiated_with_germany_ressource_rights
								has_country_flag = accept_american_occupation_siberia_after_cw 
								has_country_flag = accept_french_factories_after_cw 
								has_country_flag = accept_diplomatic_relation_with_italy 
								has_country_flag = accept_english_help_for_shipment 
							}
						}
					}
					FROM = {
						country_event = { id = generics.34 days = 7 }
					}
				}
				every_country = {
					limit = {
						has_country_flag = has_helped_whiteguard_by_volunteers
					}
					country_event = { id = generics.35 days = 1 }
				}
			}
		}	
	}
	
	#Set a country flag for major that send volunteers to WG durinf CW
	on_send_volunteers = {
		effect = {
			if = {
				limit = {
					ROOT = {
						has_country_flag = help_whiteguard_during_russian_civil_war
						has_idea = SOV_Participation_russian_civil_war_foreign
					}
					FROM = {
						tag = SOV
						has_global_flag = second_russian_civil_war_in_progress
					}
				}
				ROOT = {
					set_country_flag = has_helped_whiteguard_by_volunteers
				}	
			}
		}
	}

	#Crimea loses all their ships on capitulation
	on_capitulation = {
		effect = {
			if = {
				limit = {
					ROOT = {
						tag = CRI
						has_idea = CRI_Master_black_sea
					}
				}
				ROOT = {
					transfer_navy = {
						target = FROM
					}
				}
				FROM = {
					country_event = generics.43
				}
			}
		}
	}

	#Arrays setup
	on_war_relation_added = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				log = "Russia Reworked SCW on_war_relation_added debug :"
				log = " ROOT : [ROOT.GetNameDefCap]"
				log = " FROM : [FROM.GetNameDefCap]"
				if = {
					limit = {
						ROOT = {
							OR = {
								tag = SOV
								tag = SOU
								tag = UKR
							}
							if = {
								limit = {
									tag = UKR
								}
								is_in_array = { global.russian_scw_participants = UKR }
							}
						}
					}
					log = " ROOT ([ROOT.GetNameDefCap]) is valid"
					if = {
						limit = {
							NOT = {
								#is_in_array = { global.russian_scw_participants = ROOT }
								any_of = {
									array = global.russian_scw_participants
									value = v
									index = i
									
									ROOT = {
										tag = var:v
									}
								}
							}
						}
						add_to_array = { global.russian_scw_participants = ROOT }
						log = " Added to array ROOT global.russian_scw_participants : [ROOT.GetNameDefCap]"
						if = {
							limit = {
								ROOT = {
									OR = {
										tag = SOV
										is_in_faction_with = SOV
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sov = ROOT }
						}
						else_if = {
							limit = {
								ROOT = {
									OR = {
										tag = SOU
										is_in_faction_with = SOU
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sou = ROOT }
						}
						else_if = {
							limit = {
								ROOT = {
									OR = {
										tag = UKR
										is_in_faction_with = UKR
									}
								}
								is_in_array = { global.russian_scw_participants = UKR }
							}
							add_to_array = { global.russian_scw_participants_ukr = ROOT }
						}
						else = {
							add_to_array = { global.russian_scw_participants_other = ROOT }
						}
					}
					if = {
						limit = {
							NOT = {
								#is_in_array = { global.russian_scw_participants = FROM }
								any_of = {
									array = global.russian_scw_participants
									value = v
									index = i
									
									FROM = {
										tag = var:v
									}
								}
							}
						}
						add_to_array = { global.russian_scw_participants = FROM }
						log = " Added to array FROM global.russian_scw_participants : [FROM.GetNameDefCap]"
						if = {
							limit = {
								FROM = {
									OR = {
										tag = SOV
										is_in_faction_with = SOV
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sov = FROM }
						}
						else_if = {
							limit = {
								FROM = {
									OR = {
										tag = SOU
										is_in_faction_with = SOU
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sou = FROM }
						}
						else_if = {
							limit = {
								FROM = {
									OR = {
										tag = UKR
										is_in_faction_with = UKR
									}
								}
								is_in_array = { global.russian_scw_participants = UKR }
							}
							add_to_array = { global.russian_scw_participants_ukr = FROM }
						}
						else = {
							add_to_array = { global.russian_scw_participants_other = FROM }
						}
					}
				}
				if = {
					limit = {
						FROM = {
							OR = {
								tag = SOV
								tag = SOU
								tag = UKR
							}
							if = {
								limit = {
									tag = UKR
								}
								is_in_array = { global.russian_scw_participants = UKR }
							}
						}
					}
					log = " FROM ([FROM.GetNameDefCap]) is valid"
					if = {
						limit = {
							NOT = {
								#is_in_array = { global.russian_scw_participants = ROOT }
								any_of = {
									array = global.russian_scw_participants
									value = v
									index = i
									
									ROOT = {
										tag = var:v
									}
								}
							}
						}
						add_to_array = { global.russian_scw_participants = ROOT }
						log = " Added to array ROOT global.russian_scw_participants : [ROOT.GetNameDefCap]"
						if = {
							limit = {
								ROOT = {
									OR = {
										tag = SOV
										is_in_faction_with = SOV
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sov = ROOT }
						}
						else_if = {
							limit = {
								ROOT = {
									OR = {
										tag = SOU
										is_in_faction_with = SOU
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sou = ROOT }
						}
						else_if = {
							limit = {
								ROOT = {
									OR = {
										tag = UKR
										is_in_faction_with = UKR
									}
								}
								is_in_array = { global.russian_scw_participants = UKR }
							}
							add_to_array = { global.russian_scw_participants_ukr = ROOT }
						}
						else = {
							add_to_array = { global.russian_scw_participants_other = ROOT }
						}
					}
					if = {
						limit = {
							NOT = {
								#is_in_array = { global.russian_scw_participants = FROM }
								any_of = {
									array = global.russian_scw_participants
									value = v
									index = i
									
									FROM = {
										tag = var:v
									}
								}
							}
						}
						add_to_array = { global.russian_scw_participants = FROM }
						log = " Added to array FROM global.russian_scw_participants : [FROM.GetNameDefCap]"
						if = {
							limit = {
								FROM = {
									OR = {
										tag = SOV
										is_in_faction_with = SOV
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sov = FROM }
						}
						else_if = {
							limit = {
								FROM = {
									OR = {
										tag = SOU
										is_in_faction_with = SOU
									}
								}
							}
							add_to_array = { global.russian_scw_participants_sou = FROM }
						}
						else_if = {
							limit = {
								FROM = {
									OR = {
										tag = UKR
										is_in_faction_with = UKR
									}
								}
								is_in_array = { global.russian_scw_participants = UKR }
							}
							add_to_array = { global.russian_scw_participants_ukr = FROM }
						}
						else = {
							add_to_array = { global.russian_scw_participants_other = FROM }
						}
					}
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_annex = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_subject_annexed = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_release_as_free = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_release_as_puppet = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_puppet = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_peace = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_create_faction = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_faction_formed = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_join_faction = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_leave_faction = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_weekly_SOV = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_weekly_SOU = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}

	on_weekly_UKR = {
		effect = {
			if = {
				limit = {
					has_global_flag = second_russian_civil_war_in_progress
				}
				sov_clean_scw_arrays = yes
			}
		}
	}
}