d_russia_reworked_show_errors = {
    log = "Russia Reworked debug :"
    if = {
        limit = {
            check_variable = {
                var = global.russia_reworked_core_file_missing
                value = 1
                compare = greater_than_or_equals
            }
        }
        log = " [?global.russia_reworked_core_file_missing] core files missing."
    }
    else = {
        log = " No core file missing."
    }

    if = {
        limit = {
            check_variable = {
                var = global.russia_reworked_noncore_file_missing
                value = 1
                compare = greater_than_or_equals
            }
        }
        log = " [?global.russia_reworked_noncore_file_missing] non-core files missing."
    }
    else = {
        log = " No non-core file missing."
    }

    log = " Note : The result of this might not be accurate."
    log = "           You might or might not have conflicts that we did not detect."
}

d_russia_reworked_refresh_democratic_gui = {
    calculate_sov_gui_percentage_democratic_vote = yes
    log = "Russia Reworked debug :"
    log = " Voting progress bar refreshed."
}

d_russia_reworked_set_revolution_scale = {
    if = {
        limit = {
            OR = {
                check_variable = {
                    var = args^num
                    value = 1
                    compare = less_than
                }
                check_variable = {
                    var = args^num
                    value = 1
                    compare = greater_than
                }
            }
        }
        log = "Error"
        log = " Expected [?1|Y0] argument, got [?args^num|R0]."
    }
    else = {
        set_variable = { SOV.revolution_count = args^0 }
        set_variable = { SOV.revolution_count_gui = SOV.revolution_count }
		multiply_variable = { SOV.revolution_count_gui = 100 }
        set_variable = { SOV.revolution_final_count = 12 }
        subtract_from_variable = { SOV.revolution_final_count = SOV.revolution_count }
        clamp_variable = {
            var = SOV.revolution_count
            min = 0
            max = 12
        }
        clamp_variable = {
            var = SOV.revolution_count_gui
            min = 0
            max = 1000
        }
        clamp_variable = {
            var = SOV.revolution_final_count
            min = 0
            max = 12
        }
        log = "Set revolution scale to [?SOV.revolution_count|Y0]."
    }
}